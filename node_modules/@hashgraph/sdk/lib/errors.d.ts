import BigNumber from "bignumber.js";
import { Hbar } from "./Hbar";
export { ResponseCodeEnum } from "./generated/ResponseCode_pb";
export declare type ResponseCode = number;
/** Get the name of a response code from its number code. */
export declare const getResponseCodeName: (code: number) => string | null;
/**
 * Class of errors for response codes returned from Hedera.
 */
export declare class HederaError extends Error {
    /** The numerical code */
    readonly code: ResponseCode;
    /** The name of the code from the protobufs, or 'UNKNOWN' */
    readonly codeName: string;
    constructor(code: ResponseCode);
}
export declare function isCodeExceptional(code: ResponseCode, unknownIsExceptional: boolean): boolean;
export declare function throwIfExceptional(code: ResponseCode, unknownIsExceptional?: boolean): void;
export declare class ValidationError extends Error {
    constructor(className: string, errors: string[]);
}
export declare class MaxPaymentExceededError extends Error {
    readonly queryCost: Hbar;
    constructor(queryCost: Hbar, maxQueryCost: Hbar);
}
export declare class TinybarValueError extends Error {
    readonly amount: BigNumber;
    constructor(message: string, amount: number | BigNumber | Hbar);
}
