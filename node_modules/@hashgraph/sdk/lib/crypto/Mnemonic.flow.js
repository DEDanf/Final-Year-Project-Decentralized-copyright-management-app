/**
 * Flowtype definitions for Mnemonic
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.10.0
 */

import { Ed25519PrivateKey } from "./Ed25519PrivateKey";

/**
 * result of `generateMnemonic()`
 */
declare export class Mnemonic {
  +words: string[];

  /**
   * Lazily generate the key, providing an optional passphrase to protect it with
   */
  constructor(words: string[]): this;
  toPrivateKey(passphrase: string): Promise<Ed25519PrivateKey>;

  /**
   * Generate a random 24-word mnemonic.
   *
   * If you are happy with the mnemonic produced you can call `.generateKey()` on the returned object.
   *
   * This mnemonics that are compatible with the Android and iOS mobile wallets.
   *
   * **NOTE:** Mnemonics must be saved separately as they cannot be later recovered from a given key.
   */
  static generate(): Mnemonic;
  static fromString(mnemonic: string): Mnemonic;
  toString(): string;
}
