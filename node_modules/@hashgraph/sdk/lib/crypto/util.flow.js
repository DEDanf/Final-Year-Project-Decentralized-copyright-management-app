/**
 * Flowtype definitions for util
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.10.0
 */

import * as crypto from "crypto";
declare export var pbkdf2: (
  arg1: crypto.BinaryLike,
  arg2: crypto.BinaryLike,
  arg3: number,
  arg4: number,
  arg5: string
) => Promise<Buffer>;
declare export var randomBytes: (arg1: number) => Promise<Buffer>;
declare export var ed25519PrivKeyPrefix: any; // "302e020100300506032b657004220420"
declare export var ed25519PubKeyPrefix: any; // "302a300506032b6570032100"
declare export var hmacAlgo: any; // "sha384"
declare export function encodeHex(bytes: Uint8Array): string;
declare export function decodeHex(hex: string): Uint8Array;

/**
 * SLIP-10/BIP-32 child key derivation
 */
declare export function deriveChildKey(
  parentKey: Uint8Array,
  chainCode: Uint8Array,
  index: number
): {
  keyBytes: Uint8Array,
  chainCode: Uint8Array,
  ...
};
