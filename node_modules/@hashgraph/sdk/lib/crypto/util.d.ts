/// <reference types="node" />
import * as crypto from "crypto";
export declare const pbkdf2: (arg1: crypto.BinaryLike, arg2: crypto.BinaryLike, arg3: number, arg4: number, arg5: string) => Promise<Buffer>;
export declare const randomBytes: (arg1: number) => Promise<Buffer>;
export declare const ed25519PrivKeyPrefix = "302e020100300506032b657004220420";
export declare const ed25519PubKeyPrefix = "302a300506032b6570032100";
export declare const hmacAlgo = "sha384";
export declare function encodeHex(bytes: Uint8Array): string;
export declare function decodeHex(hex: string): Uint8Array;
/** SLIP-10/BIP-32 child key derivation */
export declare function deriveChildKey(parentKey: Uint8Array, chainCode: Uint8Array, index: number): {
    keyBytes: Uint8Array;
    chainCode: Uint8Array;
};
