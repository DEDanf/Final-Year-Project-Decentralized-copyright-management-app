import { QueryBuilder } from "./QueryBuilder";
import { grpc } from "@improbable-eng/grpc-web";
import { Query } from "./generated/Query_pb";
import { Response } from "./generated/Response_pb";
import { FileId } from "./file/FileId";
import { ContractId } from "./contract/ContractId";
import { AccountId } from "./account/AccountId";
import { PublicKey } from "./crypto/PublicKey";
export declare type EntityId = {
    type: "ACCOUNT";
    accountId: AccountId;
} | {
    type: "CONTRACT";
    contractId: ContractId;
} | {
    type: "FILE";
    fileId: FileId;
};
export declare class GetByKeyQuery extends QueryBuilder<EntityId[]> {
    private readonly _builder;
    constructor();
    setKey(publicKey: PublicKey): this;
    protected _doValidate(): void;
    protected get _method(): grpc.UnaryMethodDefinition<Query, Response>;
    protected _mapResponse(response: Response): EntityId[];
}
